on: push

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: minos
          POSTGRES_PASSWORD: min0s
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      MINOS_COMMANS_QUEUE_HOST: postgres
      MINOS_EVENTS_QUEUE_HOST: postgres
      MINOS_REPOSITORY_HOST: postgres

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Install Postgresql client
      run: |
          apt-get update
          apt-get install --yes postgresql-client
    - name: Create database
      run: |
          PGPASSWORD=min0s psql -U minos -h postgres -tc "CREATE DATABASE order_repository OWNER minos;"
          PGPASSWORD=min0s psql -U minos -h postgres -tc "CREATE DATABASE order_events_queue OWNER minos;"
          PGPASSWORD=min0s psql -U minos -h postgres -tc "CREATE DATABASE order_commands_queue OWNER minos;"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi
        python setup.py install

    - name: Test with pytest
      run: |
        make test

    - name: Generate coverage report
      run: |
        make coverage

    - name: Codecov
      uses: codecov/codecov-action@v1.3.1
      with:
         token: ${{ secrets.CODECOV_TOKEN }}
         files: ./coverage.xml
         fail_ci_if_error: true
