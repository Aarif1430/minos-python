on: push

jobs:
  build:

    runs-on: ubuntu-latest
    container: python:3.9-buster

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      zookeeper:
          image: wurstmeister/zookeeper:latest
          ports:
              - 2181:2181
      kafka:
          image: wurstmeister/kafka:latest
          ports:
              - 9092:9092
          env:
              KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
              KAFKA_ADVERTISED_HOST_NAME: kafka

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi
          python setup.py install
    - name: Install Postgresql client
      run: |
          apt-get update
          apt-get install --yes postgresql-client
    - name: Create database
      run: |
          PGPASSWORD=postgres psql -U postgres -h postgres -p 5432 -tc "CREATE ROLE broker with createdb login password 'br0k3r';"
          PGPASSWORD=postgres psql -U postgres -h postgres -p 5432 -tc "CREATE DATABASE broker_db OWNER broker;"
    - name: Test with pytest
      run: |
          make test
    -   name: Generate coverage report
        run: |
            make coverage
    -   name: Codecov
        uses: codecov/codecov-action@v1.3.1
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            files: ./coverage.xml
            fail_ci_if_error: true
